var __awaiter=this&&this.__awaiter||function(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function a(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}c((o=o.apply(e,t||[])).next())}))};System.register("Row",[],(function(e,t){"use strict";var n;t&&t.id;return e("rowToNumber",(function(e){switch(e){case n.Numbers:return 1;case n.AboveHome:return 2;case n.Home:return 3;case n.BelowHome:case n.Mods:case n.Thumbs:return 4;default:return 1}})),{setters:[],execute:function(){!function(e){e.Numbers="numbers",e.AboveHome="above-home",e.Home="home",e.BelowHome="below-home",e.Mods="mods",e.Thumbs="thumbs",e.Unknown="unknown"}(n||(n={})),e("Row",n)}}})),System.register("Font",["fontkit","mkdirp","https","unzip-stream","fs","path","debug"],(function(e,t){"use strict";var n,o,s,r,i,a,c,l,u;t&&t.id;return{setters:[function(e){n=e},function(e){o=e},function(e){s=e},function(e){r=e},function(e){i=e},function(e){a=e},function(e){c=e}],execute:function(){l=c.default("font"),e("Typeface",u=class e{get font(){if(!this.fetchedFont)throw new Error("Font not loaded");return this.fetchedFont}static fetchFonts(){return __awaiter(this,void 0,void 0,(function*(){return Promise.all([e.fromGoogle("Noto Sans","Bold"),e.fromGoogle("Noto Sans Symbols","VariableFont_wght"),e.fromGoogle("Noto Sans Symbols 2","Regular")])}))}static fromGoogle(t,n="Regular"){return __awaiter(this,void 0,void 0,(function*(){return l(`Fetching font ${t}`),o.default("fonts"),new Promise(((o,c)=>__awaiter(this,void 0,void 0,(function*(){const u=`${t.replace(/\s+/g,"")}-${n}.ttf`;s.get(`https://fonts.google.com/download?family=${t}`,(n=>{n.pipe(r.Parse()).on("entry",(n=>{const s=a.parse(n.path);l(Object.assign({fontfileName:u},s));const r=a.join("fonts",s.base);s.base===u?n.pipe(i.createWriteStream(r)).on("finish",(()=>{l(`Fetched font ${t}`),o(new e(r))})):n.autodrain()}))})).on("error",c)}))))}))}constructor(e){this.fetchedFont=void 0,this.fetchedFont=n.openSync(e)}getScadSpecifier(e=""){var t;return`${(null!==(t=this.font.postscriptName)&&void 0!==t?t:this.font.familyName).replace(/\-?(Bold|Regular|Medium)$/g,"")}:style=${e}`}supportsCharacter(e){const t=e.codePointAt(0);if(!t||1!==e.length)throw new Error("Character must be a single character");return this.font.hasGlyphForCodePoint(t)}supports(e){return[...e].every((e=>this.supportsCharacter(e)))}}),u.fetchedFonts=u.fetchFonts()}}})),System.register("Key",["fs","mkdirp","child_process","Row","Font"],(function(e,t){"use strict";var n,o,s,r,i,a;t&&t.id;return{setters:[function(e){n=e},function(e){o=e},function(e){s=e},function(e){r=e},function(e){i=e}],execute:function(){e("Key",a=class e{constructor(){this.font="DejaVu Sans:style=Bold"}get header(){return`include <../../KeyV2/includes.scad>;\n$inset_legend_depth = 0.9;\n$font="${this.font}";\n`}get necessaryCharacters(){return""}determineFont(){var e;return __awaiter(this,void 0,void 0,(function*(){const t="DejaVu Sans:style=Bold",n=this.necessaryCharacters,o=yield i.Typeface.fetchedFonts;for(const s of o)if(s.supports(n))return void(this.font=null!==(e=s.getScadSpecifier("Bold"))&&void 0!==e?e:t);this.font=t}))}get coda(){return""}setFont(e){return this.font=e,this}getScad(){const t=["box_cherry(0.5)",`sa_row(${r.rowToNumber(this.row)})`,"bar_support()",...this.transformations,"key();"];return e.rounding&&t.unshift("rounded()"),[this.header,t.join("\n\t"),this.coda].join("\n")}writeScadFile(){return __awaiter(this,void 0,void 0,(function*(){this.font||(yield this.determineFont()),o.mkdirpSync("./scad"),n.writeFileSync(`./scad/${this.id}.scad`,this.getScad())}))}link(){try{o.mkdirpSync(`./rows/${this.row}`),n.linkSync(`./stl/${this.id}.stl`,`./rows/${this.row}/${this.id}.stl`)}catch(e){}}convertSync(){try{o.mkdirpSync("./stl"),s.execSync(`openscad-nightly -o ./stl/${this.id}.stl ./scad/${this.id}.scad`,{stdio:"pipe"}),this.link()}catch(e){console.error(`Couldn't convert ${this.row}/${this.id}`,e)}}convert(){return __awaiter(this,void 0,void 0,(function*(){return o.mkdirpSync("./stl"),new Promise(((e,t)=>{s.spawn("openscad-nightly",`-o ./stl/${this.id}.stl ./scad/${this.id}.scad`.split(/\s+/)).on("close",(n=>{0!==n&&t(new Error(`Openscad exited with code ${n}`)),this.link(),e()}))}))}))}}),a.rounding=!1}}})),System.register("TransformedKey",["Key"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.Key{constructor(e,t=[]){super(),this.base=e,this.extraTransformations=t,this.id=e.id}get header(){return this.base.header}get transformations(){return[...this.base.transformations,...this.extraTransformations]}get coda(){return this.base.coda}get row(){return this.base.row}},e("TransformedKey",o)}}})),System.register("BumpKey",["TransformedKey"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.TransformedKey{constructor(e){super(e,["bump()"]),this.base=e}},e("BumpKey",o)}}})),System.register("ExtraTallKey",["TransformedKey"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.TransformedKey{constructor(e){super(e,["2uh()",'stabilized(vertical=true, type="cherry_stabilizer")',"rotated()"]),this.base=e}},e("ExtraTallKey",o)}}})),System.register("FunctionKey",["TransformedKey"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.TransformedKey{constructor(e,t,n=4.5){super(e,[`legend("${t}", [0.8, 1.1], ${n})`]),this.base=e,this.level3=t,this.fontSize3=n}get necessaryCharacters(){return this.base.necessaryCharacters+this.level3}size3(e){return this.fontSize3=e,this}},e("FunctionKey",o)}}})),System.register("Level1Key",["Key","Row"],(function(e,t){"use strict";var n,o,s;t&&t.id;return{setters:[function(e){n=e},function(e){o=e}],execute:function(){s=class extends n.Key{constructor(e,t=o.Row.Unknown,n){super(),this.level1=e,this.row=t,this.fontSize=5,this.id=n||e}get necessaryCharacters(){return this.level1}get transformations(){return[`legend("${this.level1}", [0, 0], ${this.fontSize})`]}size(e){return this.fontSize=e,this}},e("Level1Key",s)}}})),System.register("Level2Key",["Level1Key","Row"],(function(e,t){"use strict";var n,o,s;t&&t.id;return{setters:[function(e){n=e},function(e){o=e}],execute:function(){s=class extends n.Level1Key{constructor(e,t,n=o.Row.Unknown,s){super(e,n,s),this.level1=e,this.level2=t,this.fontSize2=void 0}get necessaryCharacters(){return super.necessaryCharacters+this.level2}get transformations(){var e;const t=null!==(e=this.fontSize2)&&void 0!==e?e:Math.floor(.85*this.fontSize);return[`legend("${this.level1}", [-0.4, 1], ${this.fontSize})`,`legend("${this.level2}", [-0.4, -0.9], ${t})`]}size2(e){return this.fontSize2=e,this}},e("Level2Key",s)}}})),System.register("MiddleKey",["TransformedKey"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.TransformedKey{constructor(e){super(e,["1_5uh()","rotated()"]),this.base=e}},e("MiddleKey",o)}}})),System.register("PlainSymbolKey",["Level1Key"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.Level1Key{constructor(){super(...arguments),this.fontSize=8}},e("PlainSymbolKey",o)}}})),System.register("SideKey",["TransformedKey"],(function(e,t){"use strict";var n,o;t&&t.id;return{setters:[function(e){n=e}],execute:function(){o=class extends n.TransformedKey{constructor(e){super(e,["1_5u()"]),this.base=e}},e("SideKey",o)}}})),System.register("Spacebar",["ExtraTallKey","PlainSymbolKey","Row","TransformedKey"],(function(e,t){"use strict";var n,o,s,r,i;t&&t.id;return{setters:[function(e){n=e},function(e){o=e},function(e){s=e},function(e){r=e}],execute:function(){i=class extends r.TransformedKey{constructor(e=s.Row.Thumbs){super(new n.ExtraTallKey(new o.PlainSymbolKey("␣",e,"space")),["inverted()"]),this.font="Noto Sans Symbols 2"}get header(){return super.header+'\n$inverted_dish=true; $dish_type="sideways cylindrical";\n'}},e("Spacebar",i)}}})),System.register("layout",["BumpKey","ExtraTallKey","Level1Key","Level2Key","MiddleKey","PlainSymbolKey","SideKey","Spacebar","FunctionKey","Row"],(function(e,t){"use strict";var n,o,s,r,i,a,c,l,u,d,y,f,w;t&&t.id;return{setters:[function(e){n=e},function(e){o=e},function(e){s=e},function(e){r=e},function(e){i=e},function(e){a=e},function(e){c=e},function(e){l=e},function(e){u=e},function(e){d=e}],execute:function(){y={[d.Row.AboveHome]:"BYOULWV".split(""),[d.Row.Home]:"CIEN".split(""),[d.Row.BelowHome]:"GXJKRMFP".split("")},f="*|=~+<>^&%".split(""),e("keys",w=[new n.BumpKey(new s.Level1Key("A",d.Row.Home)),new u.FunctionKey(new n.BumpKey(new s.Level1Key("H",d.Row.Home)),"←"),new u.FunctionKey(new s.Level1Key("T",d.Row.Home),"↓"),new u.FunctionKey(new s.Level1Key("S",d.Row.Home),"→"),new u.FunctionKey(new s.Level1Key("D",d.Row.AboveHome),"↑"),new c.SideKey(new s.Level1Key("Z",d.Row.AboveHome)),new c.SideKey(new s.Level1Key("Q",d.Row.Home)),...y[d.Row.AboveHome].map((e=>new s.Level1Key(e,d.Row.AboveHome))),...y[d.Row.Home].map((e=>new s.Level1Key(e,d.Row.Home))),...y[d.Row.BelowHome].map((e=>new s.Level1Key(e,d.Row.BelowHome))),...f.map(((e,t)=>new r.Level2Key(`${t}`,e,d.Row.Numbers))),new r.Level2Key("⌃","⌘",d.Row.Numbers,"helm_swap").size(7),new r.Level2Key("⎉","⎊",d.Row.Numbers,"pause"),new r.Level2Key("'","(",d.Row.AboveHome,"apostrophe"),new r.Level2Key('\\"',")",d.Row.AboveHome,"quote"),new r.Level2Key(",",";",d.Row.Home,"comma"),new r.Level2Key(".",":",d.Row.Home,"period"),new r.Level2Key("-","_",d.Row.BelowHome,"minus").size(6),new r.Level2Key("?","!",d.Row.BelowHome,"question"),new i.MiddleKey(new r.Level2Key("/","\\\\",d.Row.BelowHome,"slash")),new i.MiddleKey(new r.Level2Key("@","`",d.Row.AboveHome,"at").size2(6)),new i.MiddleKey(new r.Level2Key("#","$",d.Row.AboveHome,"hash")),new i.MiddleKey(new a.PlainSymbolKey("⎙",d.Row.BelowHome,"prscr").setFont("NotoSansSymbols:style=bold")),new l.Spacebar(d.Row.Thumbs),new o.ExtraTallKey(new a.PlainSymbolKey("↵",d.Row.Thumbs,"return")),new o.ExtraTallKey(new a.PlainSymbolKey("⌫",d.Row.Thumbs,"backspace").setFont("NotoSansSymbols2:style=bold")),new o.ExtraTallKey(new a.PlainSymbolKey("⎋",d.Row.Thumbs,"escape").setFont("NotoSansSymbols:style=bold")),new a.PlainSymbolKey("⇧",d.Row.Thumbs,"shift_left"),new a.PlainSymbolKey("⇧",d.Row.Thumbs,"shift_right"),new a.PlainSymbolKey("⇞",d.Row.Thumbs,"pageup"),new a.PlainSymbolKey("⇟",d.Row.Thumbs,"pagedown"),new a.PlainSymbolKey("↖",d.Row.Thumbs,"home"),new a.PlainSymbolKey("↘",d.Row.Thumbs,"end"),new a.PlainSymbolKey("⌦",d.Row.Thumbs,"delete").setFont("NotoSansSymbols2:style=bold"),new a.PlainSymbolKey("⎀",d.Row.Thumbs,"insert"),new c.SideKey(new a.PlainSymbolKey("⇧",d.Row.BelowHome,"shift_pseudo_left")),new c.SideKey(new a.PlainSymbolKey("⇧",d.Row.BelowHome,"shift_pseudo_right")),new c.SideKey(new r.Level2Key("⇥","⇤",d.Row.AboveHome,"tab")),new c.SideKey(new a.PlainSymbolKey("⇬",d.Row.Home,"capslock")),new c.SideKey(new r.Level2Key("[","{",d.Row.Numbers,"bracket_left").size(4)),new c.SideKey(new r.Level2Key("]","}",d.Row.Numbers,"bracket_right").size(4)),new s.Level1Key("ƒ₁",d.Row.Mods,"layer1"),new s.Level1Key("ƒ₂",d.Row.Mods,"layer2"),new s.Level1Key("qw",d.Row.Mods,"qwerty").size(4),new s.Level1Key("ƒ₃",d.Row.Mods,"layer3"),new a.PlainSymbolKey("⎈",d.Row.Mods,"helm"),new a.PlainSymbolKey("⌃",d.Row.Mods,"control"),new a.PlainSymbolKey("❖",d.Row.Mods,"super"),new a.PlainSymbolKey("⎄",d.Row.Mods,"compose").size(5),new a.PlainSymbolKey("⎇",d.Row.Mods,"alt"),new a.PlainSymbolKey("⇮",d.Row.Mods,"altgr")]),e("fontsDetermined",Promise.all(w.map((e=>e.determineFont())))),w.sort(((e,t)=>d.rowToNumber(e.row)-d.rowToNumber(t.row)||e.id.localeCompare(t.id)))}}})),System.register("process",["cli-progress","layout","debug"],(function(e,t){"use strict";var n,o,s,r;t&&t.id;return e("processKeysSync",(function(e=/.+/){return __awaiter(this,void 0,void 0,(function*(){const t=o.keys.filter((t=>e.test(t.id))),s=new n.SingleBar({clearOnComplete:!1,hideCursor:!1,format:"{bar} {value}/{total} | ETA: {eta}s | {percentage}% | {task}"},n.Presets.shades_grey);s.start(t.length,0,{task:t[0].id});for(const[e,n]of t.entries())s.update(e,{task:`Working on ${n.id}...`}),yield n.writeScadFile(),n.convertSync(),s.increment();s.stop()}))})),e("processKeys",(function(e=/.+/,t=5){return new Promise(((s,i)=>__awaiter(this,void 0,void 0,(function*(){const i=o.keys.filter((t=>e.test(t.id))),a=[],c={},l={};let u=0;const d=new n.MultiBar({clearOnComplete:!1,hideCursor:!1,format:"{bar} {value}/{total} | ETA: {eta}s | {percentage}% | {task}"},n.Presets.shades_grey),y=d.create(i.length,0,{task:i[0].id}),f=d.create(i.length,0,{task:"Converting to STL"},{format:`{bar} {value}/{total} | ETA: {eta}s | {percentage}% | Processing: {jobsInQueue}/${t} | Queued: {jobsLeft} | {task}`});for(const[e,t]of i.entries())y.update(e,{task:`${t.id}.scad`}),yield t.writeScadFile(),y.increment(),f.update(0,{task:`Preparing ${t.id}`,jobsInQueue:Object.keys(l).length,jobsLeft:Object.keys(c).length}),c[t.id]=()=>__awaiter(this,void 0,void 0,(function*(){try{f.update(u,{task:`Converting ${t.id}...`}),yield t.convert(),delete l[t.id]}catch(e){a.push(e instanceof Error?e:new Error(JSON.stringify(e)))}u++,f.update(u,{task:`Finished ${t.id}.stl`})}));const w=setInterval((()=>{const e=Object.keys(c).length,n=Object.keys(l).length;if(f.update(u,{jobsInQueue:n,jobsLeft:e}),r(`Jobs left: ${e}, Jobs in queue: ${n}`),0===e&&0===n)return r(`Finished processing ${i.length} keys.`),a.forEach((e=>console.error(e))),clearInterval(w),d.stop(),void s();if(n>=t)return void r("Job queue is full. Waiting...");r("Starting next job...");const o=Object.keys(c)[0],y=c[o];y?(r(`Starting job ${o}...`),delete c[o],l[o]=y()):r("No more jobs to start. Waiting...")}),1e3)}))))})),{setters:[function(e){n=e},function(e){o=e},function(e){s=e}],execute:function(){r=s.default("process")}}})),System.register("index",["yargs/yargs","yargs/helpers","process","Key","os","layout"],(function(e,t){"use strict";var n,o,s,r,i,a,c;t&&t.id;return{setters:[function(e){n=e},function(e){o=e},function(e){s=e},function(e){r=e},function(e){i=e},function(e){a=e}],execute:function(){c=n.default(o.hideBin(process.argv)).option("match",{alias:"m",type:"string",description:"Only convert keys that match the given pattern"}).option("rounding",{alias:"r",type:"boolean",description:"Enable rounding (slows down conversion time drastically)"}).option("sync",{alias:"s",type:"boolean",default:!1,description:"Run conversion asynchronously"}).option("batchSize",{alias:"b",type:"number",default:Math.floor(i.cpus().length-1),description:"Number of keys to convert at once"}).parseSync(),function(){var e;return __awaiter(this,void 0,void 0,(function*(){r.Key.rounding=null!==(e=c.rounding)&&void 0!==e&&e;const t=c.match?new RegExp(c.match):void 0;yield a.fontsDetermined.then((()=>console.log("Fonts determined")));const n=c.sync?s.processKeysSync(t):s.processKeys(t,c.batchSize);yield n}))}().catch((e=>console.error(e))).finally((()=>console.log("Done!")))}}}));